{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Escuela/MateriasRow.ts", "../../../Modules/Escuela/Maestros/MateriaListFormatter.ts", "../../../Modules/ServerTypes/Escuela/MaestrosColumns.ts", "../../../Modules/ServerTypes/Escuela/MaestrosRow.ts", "../../../Modules/ServerTypes/Escuela/MaestrosService.ts", "../../../Modules/ServerTypes/Escuela/MateriasColumns.ts", "../../../Modules/ServerTypes/Escuela/MateriasService.ts", "../../../Modules/ServerTypes/Escuela/SexoColumns.ts", "../../../Modules/ServerTypes/Escuela/SexoRow.ts", "../../../Modules/ServerTypes/Escuela/SexoService.ts", "../../../Modules/ServerTypes/Escuela/MaestroMateriaRow.ts", "../../../Modules/ServerTypes/Escuela/MaestroMateriaService.ts", "../../../Modules/ServerTypes/Escuela/MaestrosForm.ts", "../../../Modules/ServerTypes/Escuela/MateriasForm.ts", "../../../Modules/ServerTypes/Escuela/SexoForm.ts"],
  "sourcesContent": ["\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface MateriasRow {\n    IdMateria?: number;\n    NombreMateria?: string;\n}\n\nexport abstract class MateriasRow {\n    static readonly idProperty = 'IdMateria';\n    static readonly nameProperty = 'NombreMateria';\n    static readonly localTextPrefix = 'Escuela.Materias';\n    static readonly lookupKey = 'Escuela.Materias';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<MateriasRow>('Escuela.Materias') }\n    static async getLookupAsync() { return getLookupAsync<MateriasRow>('Escuela.Materias') }\n\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<MateriasRow>();\n}", "import { Decorators, Formatter, Lookup } from \"@serenity-is/corelib\";\r\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\r\nimport { MateriasRow } from \"@/ServerTypes/Escuela/MateriasRow\";\r\n\r\nlet lookup: Lookup<MateriasRow>;\r\nlet promise: Promise<Lookup<MateriasRow>>;\r\n\r\n@Decorators.registerFormatter('GestorMaestro.MateriaListFormatter')\r\nexport class MateriaListFormatter implements Formatter {\r\n\r\n    format(ctx: FormatterContext) {\r\n\r\n        let idList = ctx.value as number[];\r\n        if (!idList || !idList.length)\r\n            return \"\";\r\n\r\n        let byId = lookup?.itemById;\r\n        if (byId) {\r\n            return idList.map(x => {\r\n                var z = byId[x];\r\n                return ctx.escape(z == null ? x.toString() : z.NombreMateria);\r\n            }).join(\", \");\r\n        }\r\n\r\n        promise ??= MateriasRow.getLookupAsync().then(l => {\r\n            lookup = l;\r\n            try {\r\n                ctx.grid?.invalidate();\r\n            }\r\n            finally {\r\n                lookup = null;\r\n                promise = null;\r\n            }\r\n        }).catch(() => promise = null);\r\n\r\n        return `<i class=\"fa fa-spinner\"></i>`;\r\n    }\r\n}\r\n", "\uFEFFimport { MateriaListFormatter } from \"@/Escuela/Maestros/MateriaListFormatter\";\nimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { MaestrosRow } from \"./MaestrosRow\";\n\nexport interface MaestrosColumns {\n    IdMaestro: Column<MaestrosRow>;\n    Nombre: Column<MaestrosRow>;\n    Apellido: Column<MaestrosRow>;\n    IdSexoDescripcion: Column<MaestrosRow>;\n    Cedula: Column<MaestrosRow>;\n    MateriaList: Column<MaestrosRow>;\n}\n\nexport class MaestrosColumns extends ColumnsBase<MaestrosRow> {\n    static readonly columnsKey = 'Escuela.Maestros';\n    static readonly Fields = fieldsProxy<MaestrosColumns>();\n}\n\n[MateriaListFormatter]; // referenced types", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface MaestrosRow {\n    IdMaestro?: number;\n    Nombre?: string;\n    Apellido?: string;\n    IdSexo?: number;\n    Cedula?: string;\n    MateriaList?: number[];\n    IdSexoDescripcion?: string;\n}\n\nexport abstract class MaestrosRow {\n    static readonly idProperty = 'IdMaestro';\n    static readonly nameProperty = 'Nombre';\n    static readonly localTextPrefix = 'Escuela.Maestros';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<MaestrosRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { MaestrosRow } from \"./MaestrosRow\";\n\nexport namespace MaestrosService {\n    export const baseUrl = 'Escuela/Maestros';\n\n    export declare function Create(request: SaveRequest<MaestrosRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<MaestrosRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MaestrosRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<MaestrosRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MaestrosRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<MaestrosRow>>;\n\n    export const Methods = {\n        Create: \"Escuela/Maestros/Create\",\n        Update: \"Escuela/Maestros/Update\",\n        Delete: \"Escuela/Maestros/Delete\",\n        Retrieve: \"Escuela/Maestros/Retrieve\",\n        List: \"Escuela/Maestros/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MaestrosService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { MateriasRow } from \"./MateriasRow\";\n\nexport interface MateriasColumns {\n    IdMateria: Column<MateriasRow>;\n    NombreMateria: Column<MateriasRow>;\n}\n\nexport class MateriasColumns extends ColumnsBase<MateriasRow> {\n    static readonly columnsKey = 'Escuela.Materias';\n    static readonly Fields = fieldsProxy<MateriasColumns>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { MateriasRow } from \"./MateriasRow\";\n\nexport namespace MateriasService {\n    export const baseUrl = 'Escuela/Materias';\n\n    export declare function Create(request: SaveRequest<MateriasRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<MateriasRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MateriasRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<MateriasRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MateriasRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<MateriasRow>>;\n\n    export const Methods = {\n        Create: \"Escuela/Materias/Create\",\n        Update: \"Escuela/Materias/Update\",\n        Delete: \"Escuela/Materias/Delete\",\n        Retrieve: \"Escuela/Materias/Retrieve\",\n        List: \"Escuela/Materias/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MateriasService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { SexoRow } from \"./SexoRow\";\n\nexport interface SexoColumns {\n    IdSexo: Column<SexoRow>;\n    Descripcion: Column<SexoRow>;\n}\n\nexport class SexoColumns extends ColumnsBase<SexoRow> {\n    static readonly columnsKey = 'Escuela.Sexo';\n    static readonly Fields = fieldsProxy<SexoColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface SexoRow {\n    IdSexo?: number;\n    Descripcion?: string;\n}\n\nexport abstract class SexoRow {\n    static readonly idProperty = 'IdSexo';\n    static readonly nameProperty = 'Descripcion';\n    static readonly localTextPrefix = 'Escuela.Sexo';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<SexoRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { SexoRow } from \"./SexoRow\";\n\nexport namespace SexoService {\n    export const baseUrl = 'Escuela/Sexo';\n\n    export declare function Create(request: SaveRequest<SexoRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<SexoRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SexoRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<SexoRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SexoRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<SexoRow>>;\n\n    export const Methods = {\n        Create: \"Escuela/Sexo/Create\",\n        Update: \"Escuela/Sexo/Update\",\n        Delete: \"Escuela/Sexo/Delete\",\n        Retrieve: \"Escuela/Sexo/Retrieve\",\n        List: \"Escuela/Sexo/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>SexoService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface MaestroMateriaRow {\n    IdMaestro?: number;\n    IdMateria?: number;\n    IdMaestroNombre?: string;\n    IdMateriaNombreMateria?: string;\n}\n\nexport abstract class MaestroMateriaRow {\n    static readonly idProperty = 'IdMaestro';\n    static readonly localTextPrefix = 'Escuela.MaestroMateria';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<MaestroMateriaRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { MaestroMateriaRow } from \"./MaestroMateriaRow\";\n\nexport namespace MaestroMateriaService {\n    export const baseUrl = 'Escuela/MaestroMateria';\n\n    export declare function Create(request: SaveRequest<MaestroMateriaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<MaestroMateriaRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MaestroMateriaRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<MaestroMateriaRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MaestroMateriaRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<MaestroMateriaRow>>;\n\n    export const Methods = {\n        Create: \"Escuela/MaestroMateria/Create\",\n        Update: \"Escuela/MaestroMateria/Update\",\n        Delete: \"Escuela/MaestroMateria/Delete\",\n        Retrieve: \"Escuela/MaestroMateria/Retrieve\",\n        List: \"Escuela/MaestroMateria/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MaestroMateriaService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StringEditor, ServiceLookupEditor, LookupEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface MaestrosForm {\n    Nombre: StringEditor;\n    Apellido: StringEditor;\n    IdSexo: ServiceLookupEditor;\n    Cedula: StringEditor;\n    MateriaList: LookupEditor;\n}\n\nexport class MaestrosForm extends PrefixedContext {\n    static readonly formKey = 'Escuela.Maestros';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MaestrosForm.init)  {\n            MaestrosForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = ServiceLookupEditor;\n            var w2 = LookupEditor;\n\n            initFormType(MaestrosForm, [\n                'Nombre', w0,\n                'Apellido', w0,\n                'IdSexo', w1,\n                'Cedula', w0,\n                'MateriaList', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface MateriasForm {\n    NombreMateria: StringEditor;\n}\n\nexport class MateriasForm extends PrefixedContext {\n    static readonly formKey = 'Escuela.Materias';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MateriasForm.init)  {\n            MateriasForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(MateriasForm, [\n                'NombreMateria', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface SexoForm {\n    Descripcion: StringEditor;\n}\n\nexport class SexoForm extends PrefixedContext {\n    static readonly formKey = 'Escuela.Sexo';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!SexoForm.init)  {\n            SexoForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(SexoForm, [\n                'Descripcion', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "oEAAC,IAAAA,EAAuD,SAOjD,IAAeC,EAAf,MAAeA,CAAY,CAO9B,OAAO,WAAY,CAAE,SAAO,aAAuB,kBAAkB,CAAE,CACvE,OAAa,gBAAiB,QAAAC,EAAA,sBAAE,SAAO,kBAA4B,kBAAkB,CAAE,GAQ3F,EAhBkCC,EAAAF,EAAA,eAAZA,EACF,WAAa,YADXA,EAEF,aAAe,gBAFbA,EAGF,gBAAkB,mBAHhBA,EAIF,UAAY,mBAJVA,EAUF,iBAAmB,yBAVjBA,EAWF,iBAAmB,yBAXjBA,EAYF,eAAiB,yBAZfA,EAaF,iBAAmB,yBAbjBA,EAeF,UAAS,eAAyB,EAf/C,IAAeG,EAAfH,ECPP,IAAAI,EAA8C,SAI9C,IAAIC,EACAC,EAGSC,EAAN,KAAgD,CAEnD,OAAOC,EAAuB,CAE1B,IAAIC,EAASD,EAAI,MACjB,GAAI,CAACC,GAAU,CAACA,EAAO,OACnB,MAAO,GAEX,IAAIC,EAAOL,GAAA,YAAAA,EAAQ,SACnB,OAAIK,EACOD,EAAO,IAAIE,GAAK,CACnB,IAAIC,EAAIF,EAAKC,CAAC,EACd,OAAOH,EAAI,OAAOI,GAAK,KAAOD,EAAE,SAAS,EAAIC,EAAE,aAAa,CAChE,CAAC,EAAE,KAAK,IAAI,GAGhBN,GAAA,OAAAA,EAAYO,EAAY,eAAe,EAAE,KAAKC,GAAK,CAxB3D,IAAAC,EAyBYV,EAASS,EACT,GAAI,EACAC,EAAAP,EAAI,OAAJ,MAAAO,EAAU,YACd,QACA,CACIV,EAAS,KACTC,EAAU,IACd,CACJ,CAAC,EAAE,MAAM,IAAMA,EAAU,IAAI,GAEtB,gCACX,CACJ,EA7BuDU,EAAAT,EAAA,wBAA1CA,EAANU,EAAA,CADN,aAAW,kBAAkB,oCAAoC,GACrDV,GCPb,IAAAW,EAAyC,SAalC,IAAMC,EAAN,MAAMA,UAAwB,aAAyB,CAG9D,EAH8DC,EAAAD,EAAA,mBAAjDA,EACO,WAAa,mBADpBA,EAEO,UAAS,eAA6B,EAFnD,IAAME,EAANF,ECdN,IAAAG,EAA4B,SAYtB,IAAeC,EAAf,MAAeA,CAAY,CAUlC,EAVkCC,EAAAD,EAAA,eAAZA,EACF,WAAa,YADXA,EAEF,aAAe,SAFbA,EAGF,gBAAkB,mBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAyB,EAT/C,IAAeE,EAAfF,ECZN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,mBAQVA,EAAA,QAAU,CACnB,OAAQ,0BACR,OAAQ,0BACR,OAAQ,0BACR,SAAU,4BACV,KAAM,uBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAiBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC3C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAAyC,SASnC,IAAMC,EAAN,MAAMA,UAAwB,aAAyB,CAG9D,EAH8DC,EAAAD,EAAA,mBAAjDA,EACO,WAAa,mBADpBA,EAEO,UAAS,eAA6B,EAFnD,IAAME,EAANF,ECTN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,mBAQVA,EAAA,QAAU,CACnB,OAAQ,0BACR,OAAQ,0BACR,OAAQ,0BACR,SAAU,4BACV,KAAM,uBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAiBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC3C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAAyC,SASnC,IAAMC,EAAN,MAAMA,UAAoB,aAAqB,CAGtD,EAHsDC,EAAAD,EAAA,eAAzCA,EACO,WAAa,eADpBA,EAEO,UAAS,eAAyB,EAF/C,IAAME,EAANF,ECTN,IAAAG,EAA4B,SAOtB,IAAeC,EAAf,MAAeA,CAAQ,CAU9B,EAV8BC,EAAAD,EAAA,WAARA,EACF,WAAa,SADXA,EAEF,aAAe,cAFbA,EAGF,gBAAkB,eAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAqB,EAT3C,IAAeE,EAAfF,ECPN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,eAQVA,EAAA,QAAU,CACnB,OAAQ,sBACR,OAAQ,sBACR,OAAQ,sBACR,SAAU,wBACV,KAAM,mBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAaC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACvC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA4B,SAStB,IAAeC,EAAf,MAAeA,CAAkB,CASxC,EATwCC,EAAAD,EAAA,qBAAlBA,EACF,WAAa,YADXA,EAEF,gBAAkB,yBAFhBA,EAGF,iBAAmB,yBAHjBA,EAIF,iBAAmB,yBAJjBA,EAKF,eAAiB,yBALfA,EAMF,iBAAmB,yBANjBA,EAQF,UAAS,eAA+B,EARrD,IAAeE,EAAfF,ECTN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,yBAQVA,EAAA,QAAU,CACnB,OAAQ,gCACR,OAAQ,gCACR,OAAQ,gCACR,SAAU,kCACV,KAAM,6BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAuBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACjD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA+F,SAUzF,IAAMC,EAAN,MAAMA,UAAqB,iBAAgB,CAI9C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAa,KAAO,CACrBA,EAAa,KAAO,GAEpB,IAAIE,EAAK,eACLC,EAAK,sBACLC,EAAK,kBAET,gBAAaJ,EAAc,CACvB,SAAUE,EACV,WAAYA,EACZ,SAAUC,EACV,SAAUD,EACV,cAAeE,CACnB,CAAC,CACL,CACJ,CACJ,EAvBkDC,EAAAL,EAAA,gBAArCA,EACO,QAAU,mBADvB,IAAMM,EAANN,ECVN,IAAAO,EAA4D,SAMtD,IAAMC,EAAN,MAAMA,UAAqB,iBAAgB,CAI9C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAa,KAAO,CACrBA,EAAa,KAAO,GAEpB,IAAIE,EAAK,kBAET,gBAAaF,EAAc,CACvB,gBAAiBE,CACrB,CAAC,CACL,CACJ,CACJ,EAjBkDC,EAAAH,EAAA,gBAArCA,EACO,QAAU,mBADvB,IAAMI,EAANJ,ECNN,IAAAK,EAA4D,SAMtD,IAAMC,EAAN,MAAMA,UAAiB,iBAAgB,CAI1C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAS,KAAO,CACjBA,EAAS,KAAO,GAEhB,IAAIE,EAAK,kBAET,gBAAaF,EAAU,CACnB,cAAeE,CACnB,CAAC,CACL,CACJ,CACJ,EAjB8CC,EAAAH,EAAA,YAAjCA,EACO,QAAU,eADvB,IAAMI,EAANJ",
  "names": ["import_corelib", "_MateriasRow", "__async", "__name", "MateriasRow", "import_corelib", "lookup", "promise", "MateriaListFormatter", "ctx", "idList", "byId", "x", "z", "MateriasRow", "l", "_a", "__name", "__decorateClass", "import_corelib", "_MaestrosColumns", "__name", "MaestrosColumns", "import_corelib", "_MaestrosRow", "__name", "MaestrosRow", "import_corelib", "MaestrosService", "x", "r", "s", "o", "import_corelib", "_MateriasColumns", "__name", "MateriasColumns", "import_corelib", "MateriasService", "x", "r", "s", "o", "import_corelib", "_SexoColumns", "__name", "SexoColumns", "import_corelib", "_SexoRow", "__name", "SexoRow", "import_corelib", "SexoService", "x", "r", "s", "o", "import_corelib", "_MaestroMateriaRow", "__name", "MaestroMateriaRow", "import_corelib", "MaestroMateriaService", "x", "r", "s", "o", "import_corelib", "_MaestrosForm", "prefix", "w0", "w1", "w2", "__name", "MaestrosForm", "import_corelib", "_MateriasForm", "prefix", "w0", "__name", "MateriasForm", "import_corelib", "_SexoForm", "prefix", "w0", "__name", "SexoForm"]
}
